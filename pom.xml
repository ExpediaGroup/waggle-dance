<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>com.hotels</groupId>
    <artifactId>hotels-oss-parent</artifactId>
    <version>2.0.6</version>
  </parent>

  <artifactId>waggle-dance-parent</artifactId>
  <version>2.3.2-SNAPSHOT</version>
  <packaging>pom</packaging>
  <name>Waggle Dance Parent</name>
  <description>Hive Metastore federation service.</description>
  <url>https://github.com/HotelsDotCom/waggle-dance</url>
  <inceptionYear>2016</inceptionYear>

  <scm>
    <connection>scm:git:git@github.com:HotelsDotCom/waggle-dance.git</connection>
    <developerConnection>scm:git:git@github.com:HotelsDotCom/waggle-dance.git</developerConnection>
    <url>https://github.com/HotelsDotCom/waggle-dance</url>
    <tag>HEAD</tag>
  </scm>

  <modules>
    <module>waggle-dance-core</module>
    <module>waggle-dance-api</module>
    <module>waggle-dance-rest</module>
    <module>waggle-dance-integration-tests</module>
    <module>waggle-dance</module>
    <module>waggle-dance-rpm</module>
  </modules>

  <properties>
    <cobertura.version>2.0.3</cobertura.version>
    <cobertura.maven.plugin.version>2.6</cobertura.maven.plugin.version>
    <maven.release.plugin.version>2.5.3</maven.release.plugin.version>
    <spring-platform.version>Brussels-SR5</spring-platform.version>
    <hadoop.version>2.7.2</hadoop.version>
    <hive.version>2.3.0</hive.version>
    <dropwizard.version>1.0.5</dropwizard.version>
    <aspectj-maven-plugin.version>1.9</aspectj-maven-plugin.version>
    <jdk.version>1.7</jdk.version>
    <aspectj.version>1.8.9</aspectj.version>
    <beeju.version>1.2.0</beeju.version>
  </properties>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>io.spring.platform</groupId>
        <artifactId>platform-bom</artifactId>
        <version>${spring-platform.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>io.dropwizard</groupId>
        <artifactId>dropwizard-bom</artifactId>
        <version>${dropwizard.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>org.apache.hadoop</groupId>
        <artifactId>hadoop-common</artifactId>
        <version>${hadoop.version}</version>
        <scope>compile</scope>
      </dependency>
      <dependency>
        <groupId>org.apache.hadoop</groupId>
        <artifactId>hadoop-mapreduce-client-core</artifactId>
        <version>${hadoop.version}</version>
        <scope>compile</scope>
      </dependency>
      <dependency>
        <groupId>org.apache.hive</groupId>
        <artifactId>hive-common</artifactId>
        <version>${hive.version}</version>
        <scope>compile</scope>
      </dependency>
      <dependency>
        <groupId>org.apache.hive</groupId>
        <artifactId>hive-metastore</artifactId>
        <version>${hive.version}</version>
        <scope>compile</scope>
      </dependency>
      <dependency>
        <groupId>org.apache.derby</groupId>
        <artifactId>derby</artifactId>
        <!-- we should use whatever hive-metastore is using. Cannot rely on the transitive dep because we want it test scoped. -->
        <version>10.10.2.0</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>com.hotels</groupId>
        <artifactId>beeju</artifactId>
        <version>${beeju.version}</version>
        <scope>test</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-release-plugin</artifactId>
          <version>${maven.release.plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>aspectj-maven-plugin</artifactId>
          <version>${aspectj-maven-plugin.version}</version>
          <configuration>
            <source>${jdk.version}</source>
            <target>${jdk.version}</target>
            <verbose>true</verbose>
            <complianceLevel>${jdk.version}</complianceLevel>
            <showWeaveInfo>true</showWeaveInfo>
            <aspectLibraries>
              <aspectLibrary>
                <groupId>org.springframework</groupId>
                <artifactId>spring-aspects</artifactId>
              </aspectLibrary>
              <aspectLibrary>
                <groupId>com.jcabi</groupId>
                <artifactId>jcabi-aspects</artifactId>
              </aspectLibrary>
            </aspectLibraries>
          </configuration>
          <dependencies>
            <dependency>
              <groupId>org.aspectj</groupId>
              <artifactId>aspectjtools</artifactId>
              <version>${aspectj.version}</version>
            </dependency>
          </dependencies>
          <executions>
            <execution>
              <phase>process-classes</phase>
              <goals>
                <goal>compile</goal>
                <goal>test-compile</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
        <!--This plugin's configuration is used to store Eclipse m2e settings
          only. It has no influence on the Maven build itself. -->
        <plugin>
          <groupId>org.eclipse.m2e</groupId>
          <artifactId>lifecycle-mapping</artifactId>
          <version>1.0.0</version>
          <configuration>
            <lifecycleMappingMetadata>
              <pluginExecutions>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>aspectj-maven-plugin</artifactId>
                    <versionRange>[1.0,)</versionRange>
                    <goals>
                      <goal>compile</goal>
                      <goal>test-compile</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <execute />
                  </action>
                </pluginExecution>
              </pluginExecutions>
            </lifecycleMappingMetadata>
          </configuration>
        </plugin>
        <plugin>
          <groupId>com.mycila</groupId>
          <artifactId>license-maven-plugin</artifactId>
          <version>${license.maven.plugin.version}</version>
          <configuration>
            <!-- excluding files that don't need a header update -->
            <excludes>
              <exclude>src/main/java/com/hotels/bdp/waggledance/api/validation/constraint/TunnelRoute.java</exclude>
              <exclude>src/main/java/com/hotels/bdp/waggledance/api/validation/validator/TunnelRouteValidator.java</exclude>
              <exclude>src/main/java/com/hotels/bdp/waggledance/client/ThriftMetastoreClient.java</exclude>
              <exclude>src/main/java/com/hotels/bdp/waggledance/server/MetaStoreProxyServer.java</exclude>
              <exclude>src/main/java/com/hotels/bdp/waggledance/validation/Preconditions.java</exclude>
            </excludes>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>

</project>
